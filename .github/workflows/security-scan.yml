name: Security Scan

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  codeql-analysis:
    runs-on: ubuntu-latest
    name: CodeQL Analysis
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality
        
    - name: Setup .NET
      if: matrix.language == 'csharp'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build
      if: matrix.language == 'csharp'
      run: dotnet build
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      
  dependency-check:
    runs-on: ubuntu-latest
    name: OWASP Dependency Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'GloboClima'
        path: '.'
        format: 'HTML,SARIF'
        args: >
          --enableRetired
          --enableExperimental
          
    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: reports/dependency-check-report.sarif
        
    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/dependency-check-report.html
        
  container-scan:
    runs-on: ubuntu-latest
    name: Container Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t globoclima:scan .
      
    - name: Run Trivy scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'globoclima:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        
  secrets-scan:
    runs-on: ubuntu-latest
    name: Secrets Scanning
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
  license-scan:
    runs-on: ubuntu-latest
    name: License Compliance
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Install license scanner
      run: |
        dotnet tool install --global dotnet-project-licenses
        
    - name: Scan licenses
      run: |
        dotnet-project-licenses -i . -o licenses.json -f json
        
    - name: Check for problematic licenses
      run: |
        # Check for GPL, AGPL, or other copyleft licenses
        if grep -E '"(GPL|AGPL|LGPL)"' licenses.json; then
          echo "Found potentially problematic licenses"
          exit 1
        fi
        
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: licenses.json