@page "/profile"
@inject AuthenticationStateProvider AuthStateProvider
@inject AuthService AuthService
@inject NavigationManager Navigation
@attribute [Authorize]

<PageTitle>Perfil - GloboClima</PageTitle>

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="bi bi-person-circle me-2"></i>
                        Meu Perfil
                    </h3>
                </div>
                <div class="card-body">
                    @if (authState != null && authState.User.Identity?.IsAuthenticated == true)
                    {
                        <div class="row">
                            <div class="col-md-4 text-center mb-4">
                                <div class="profile-avatar mb-3">
                                    <i class="bi bi-person-circle display-1 text-primary"></i>
                                </div>
                                <h5 class="text-muted">@userEmail</h5>
                            </div>
                            <div class="col-md-8">
                                <h5 class="mb-3">Informações da Conta</h5>
                                
                                <div class="row g-3">
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <label class="form-label text-muted">Email</label>
                                            <div class="info-value">@userEmail</div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <label class="form-label text-muted">Membro desde</label>
                                            <div class="info-value">@memberSince.ToString("dd/MM/yyyy")</div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <label class="form-label text-muted">Cidades Favoritas</label>
                                            <div class="info-value">@weatherFavoritesCount</div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <label class="form-label text-muted">Países Favoritos</label>
                                            <div class="info-value">@countryFavoritesCount</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <hr class="my-4">
                        
                        <div class="row">
                            <div class="col-md-6">
                                <h6 class="text-muted mb-3">
                                    <i class="bi bi-cloud-sun me-2"></i>
                                    Últimas Pesquisas de Clima
                                </h6>
                                <div class="recent-searches">
                                    <small class="text-muted">Em breve...</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6 class="text-muted mb-3">
                                    <i class="bi bi-globe me-2"></i>
                                    Últimas Pesquisas de Países
                                </h6>
                                <div class="recent-searches">
                                    <small class="text-muted">Em breve...</small>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <i class="bi bi-exclamation-triangle display-1 text-warning"></i>
                            <h5 class="mt-3">Acesso Negado</h5>
                            <p class="text-muted">Você precisa estar logado para acessar seu perfil.</p>
                            <a href="/login" class="btn btn-primary">Fazer Login</a>
                        </div>
                    }
                </div>
                <div class="card-footer text-center">
                    <button class="btn btn-outline-danger" @onclick="Logout">
                        <i class="bi bi-box-arrow-right me-2"></i>
                        Sair da Conta
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .profile-avatar {
        padding: 1rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 50%;
        display: inline-block;
        margin: 0 auto;
    }
    
    .profile-avatar i {
        color: white !important;
    }
    
    .info-item {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        border-left: 4px solid #0d6efd;
    }
    
    .info-value {
        font-weight: 600;
        color: #495057;
        font-size: 1.1rem;
    }
    
    .recent-searches {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        min-height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .card {
        border: none;
        border-radius: 15px;
    }
    
    .card-header {
        border-radius: 15px 15px 0 0 !important;
    }
</style>

@code {
    private AuthenticationState? authState;
    private string userEmail = "";
    private DateTime memberSince = DateTime.Now.AddDays(-30); // Mock data
    private int weatherFavoritesCount = 0;
    private int countryFavoritesCount = 0;
    
    protected override async Task OnInitializedAsync()
    {
        authState = await AuthStateProvider.GetAuthenticationStateAsync();
        
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            userEmail = authState.User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? "Usuário";
            
            // TODO: Carregar dados reais dos favoritos
            // weatherFavoritesCount = await GetWeatherFavoritesCount();
            // countryFavoritesCount = await GetCountryFavoritesCount();
        }
    }
    
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login", true);
    }
}